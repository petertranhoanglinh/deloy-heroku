{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getListFiles = exports.getImage = exports.getBase64 = exports.getAcceptTypeString = exports.openFileDialog = void 0;\n\nexports.openFileDialog = function (inputRef) {\n  if (inputRef.current) inputRef.current.click();\n};\n\nexports.getAcceptTypeString = function (acceptType) {\n  return acceptType && acceptType.length > 0 ? acceptType.map(function (item) {\n    return \".\" + item;\n  }).join(', ') : 'image/*';\n};\n\nexports.getBase64 = function (file) {\n  var reader = new FileReader();\n  return new Promise(function (resolve) {\n    reader.addEventListener('load', function () {\n      return resolve(String(reader.result));\n    });\n    reader.readAsDataURL(file);\n  });\n};\n\nexports.getImage = function (file) {\n  var image = new Image();\n  return new Promise(function (resolve) {\n    image.addEventListener('load', function () {\n      return resolve(image);\n    });\n    image.src = URL.createObjectURL(file);\n  });\n};\n\nexports.getListFiles = function (files, dataURLKey) {\n  var promiseFiles = [];\n\n  for (var i = 0; i < files.length; i += 1) {\n    promiseFiles.push(exports.getBase64(files[i]));\n  }\n\n  return Promise.all(promiseFiles).then(function (fileListBase64) {\n    var fileList = fileListBase64.map(function (base64, index) {\n      var _a;\n\n      return _a = {}, _a[dataURLKey] = base64, _a.file = files[index], _a;\n    });\n    return fileList;\n  });\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/AppCoin/tienao/tienao/node_modules/react-images-uploading/dist/utils.js"],"names":["Object","defineProperty","exports","value","getListFiles","getImage","getBase64","getAcceptTypeString","openFileDialog","inputRef","current","click","acceptType","length","map","item","join","file","reader","FileReader","Promise","resolve","addEventListener","String","result","readAsDataURL","image","Image","src","URL","createObjectURL","files","dataURLKey","promiseFiles","i","push","all","then","fileListBase64","fileList","base64","index","_a"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,QAAR,GAAmBH,OAAO,CAACI,SAAR,GAAoBJ,OAAO,CAACK,mBAAR,GAA8BL,OAAO,CAACM,cAAR,GAAyB,KAAK,CAA1H;;AACAN,OAAO,CAACM,cAAR,GAAyB,UAAUC,QAAV,EAAoB;AACzC,MAAIA,QAAQ,CAACC,OAAb,EACID,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACP,CAHD;;AAIAT,OAAO,CAACK,mBAAR,GAA8B,UAAUK,UAAV,EAAsB;AAChD,SAAOA,UAAU,IAAIA,UAAU,CAACC,MAAX,GAAoB,CAAlC,GACDD,UAAU,CAACE,GAAX,CAAe,UAAUC,IAAV,EAAgB;AAAE,WAAO,MAAMA,IAAb;AAAoB,GAArD,EAAuDC,IAAvD,CAA4D,IAA5D,CADC,GAED,SAFN;AAGH,CAJD;;AAKAd,OAAO,CAACI,SAAR,GAAoB,UAAUW,IAAV,EAAgB;AAChC,MAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClCH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AAAE,aAAOD,OAAO,CAACE,MAAM,CAACL,MAAM,CAACM,MAAR,CAAP,CAAd;AAAwC,KAAtF;AACAN,IAAAA,MAAM,CAACO,aAAP,CAAqBR,IAArB;AACH,GAHM,CAAP;AAIH,CAND;;AAOAf,OAAO,CAACG,QAAR,GAAmB,UAAUY,IAAV,EAAgB;AAC/B,MAAIS,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACA,SAAO,IAAIP,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClCK,IAAAA,KAAK,CAACJ,gBAAN,CAAuB,MAAvB,EAA+B,YAAY;AAAE,aAAOD,OAAO,CAACK,KAAD,CAAd;AAAwB,KAArE;AACAA,IAAAA,KAAK,CAACE,GAAN,GAAYC,GAAG,CAACC,eAAJ,CAAoBb,IAApB,CAAZ;AACH,GAHM,CAAP;AAIH,CAND;;AAOAf,OAAO,CAACE,YAAR,GAAuB,UAAU2B,KAAV,EAAiBC,UAAjB,EAA6B;AAChD,MAAIC,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAAClB,MAA1B,EAAkCqB,CAAC,IAAI,CAAvC,EAA0C;AACtCD,IAAAA,YAAY,CAACE,IAAb,CAAkBjC,OAAO,CAACI,SAAR,CAAkByB,KAAK,CAACG,CAAD,CAAvB,CAAlB;AACH;;AACD,SAAOd,OAAO,CAACgB,GAAR,CAAYH,YAAZ,EAA0BI,IAA1B,CAA+B,UAAUC,cAAV,EAA0B;AAC5D,QAAIC,QAAQ,GAAGD,cAAc,CAACxB,GAAf,CAAmB,UAAU0B,MAAV,EAAkBC,KAAlB,EAAyB;AACvD,UAAIC,EAAJ;;AACA,aAAQA,EAAE,GAAG,EAAL,EACJA,EAAE,CAACV,UAAD,CAAF,GAAiBQ,MADb,EAEJE,EAAE,CAACzB,IAAH,GAAUc,KAAK,CAACU,KAAD,CAFX,EAGJC,EAHJ;AAIH,KANc,CAAf;AAOA,WAAOH,QAAP;AACH,GATM,CAAP;AAUH,CAfD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getListFiles = exports.getImage = exports.getBase64 = exports.getAcceptTypeString = exports.openFileDialog = void 0;\nexports.openFileDialog = function (inputRef) {\n    if (inputRef.current)\n        inputRef.current.click();\n};\nexports.getAcceptTypeString = function (acceptType) {\n    return acceptType && acceptType.length > 0\n        ? acceptType.map(function (item) { return \".\" + item; }).join(', ')\n        : 'image/*';\n};\nexports.getBase64 = function (file) {\n    var reader = new FileReader();\n    return new Promise(function (resolve) {\n        reader.addEventListener('load', function () { return resolve(String(reader.result)); });\n        reader.readAsDataURL(file);\n    });\n};\nexports.getImage = function (file) {\n    var image = new Image();\n    return new Promise(function (resolve) {\n        image.addEventListener('load', function () { return resolve(image); });\n        image.src = URL.createObjectURL(file);\n    });\n};\nexports.getListFiles = function (files, dataURLKey) {\n    var promiseFiles = [];\n    for (var i = 0; i < files.length; i += 1) {\n        promiseFiles.push(exports.getBase64(files[i]));\n    }\n    return Promise.all(promiseFiles).then(function (fileListBase64) {\n        var fileList = fileListBase64.map(function (base64, index) {\n            var _a;\n            return (_a = {},\n                _a[dataURLKey] = base64,\n                _a.file = files[index],\n                _a);\n        });\n        return fileList;\n    });\n};\n"]},"metadata":{},"sourceType":"script"}