{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 7420\\\\Documents\\\\GitHub\\\\deloy-heroku\\\\src\\\\components\\\\PayMethod.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Util from './Util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PayMethod(props) {\n  _s();\n\n  const [state, setValue] = useState({\n    balances: []\n  });\n  useEffect(() => {\n    if (props.name === \"COIN\") {\n      const getBalance = async () => {\n        fetch(Util.URL_REST + \"api/account/balance/*/\" + 1, {\n          method: \"GET\",\n          headers: Util.headersList\n        }).then(res => res.json()).then(json => {\n          setValue({\n            balances: json\n          });\n        });\n      };\n\n      getBalance();\n    }\n  }, []);\n\n  if (props.name === \"COIN\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"\",\n        id: \"input\",\n        class: \"form-control\",\n        children: state.balances.map(balance => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: balance.coinId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(PayMethod, \"0WjuoWVhxRCWc+5APH717O/Oxkw=\");\n\n_c = PayMethod;\nexport default PayMethod;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayMethod\");","map":{"version":3,"sources":["C:/Users/Dell 7420/Documents/GitHub/deloy-heroku/src/components/PayMethod.js"],"names":["React","useState","useEffect","Util","PayMethod","props","state","setValue","balances","name","getBalance","fetch","URL_REST","method","headers","headersList","then","res","json","map","balance","coinId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAACO,IAAAA,QAAQ,EAAC;AAAV,GAAD,CAAlC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,KAAK,CAACI,IAAN,KAAe,MAAlB,EAAyB;AACrB,YAAMC,UAAU,GAAG,YAAU;AACzBC,QAAAA,KAAK,CAACR,IAAI,CAACS,QAAL,GAAgB,wBAAhB,GAAyC,CAA1C,EAA6C;AAC9CC,UAAAA,MAAM,EAAE,KADsC;AAE9CC,UAAAA,OAAO,EAAEX,IAAI,CAACY;AAFgC,SAA7C,CAAL,CAIKC,IAJL,CAIWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJnB,EAKKF,IALL,CAKWE,IAAD,IAAU;AACbX,UAAAA,QAAQ,CAAC;AACNC,YAAAA,QAAQ,EAACU;AADH,WAAD,CAAR;AAGF,SATL;AAUH,OAXD;;AAYCR,MAAAA,UAAU;AACd;AAEF,GAjBM,EAiBJ,EAjBI,CAAT;;AAkBA,MAAGL,KAAK,CAACI,IAAN,KAAe,MAAlB,EAAyB;AAEzB,wBACA;AAAA,8BACI;AAAA,kBAAKJ,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEG;AAAQ,QAAA,IAAI,EAAC,EAAb;AAAgB,QAAA,EAAE,EAAC,OAAnB;AAA2B,QAAA,KAAK,EAAC,cAAjC;AAAA,kBAGKH,KAAK,CAACE,QAAN,CAAeW,GAAf,CACIC,OAAO,iBACH;AAAA,oBAASA,OAAO,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFR;AAHL;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAkBC,GApBD,MAqBI;AACA,WAAO,IAAP;AACH;AAGJ;;GA9CQjB,S;;KAAAA,S;AA+CT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Util from './Util';\r\n   \r\nfunction PayMethod(props){  \r\n    const [state, setValue] = useState({balances:[]});\r\n    useEffect(() => {\r\n        if(props.name === \"COIN\"){\r\n            const getBalance = async() =>{\r\n                fetch(Util.URL_REST + \"api/account/balance/*/\"+1, {\r\n                    method: \"GET\",\r\n                    headers: Util.headersList,\r\n                  })\r\n                    .then((res) => res.json())\r\n                    .then((json) => {\r\n                       setValue({\r\n                          balances:json\r\n                       })\r\n                    });\r\n            }\r\n             getBalance();\r\n        }\r\n       \r\n      }, []);\r\n    if(props.name === \"COIN\"){\r\n       \r\n    return (\r\n    <div>\r\n        <h1>{props.name}</h1>\r\n       <select name=\"\" id=\"input\" class=\"form-control\">\r\n      \r\n        {\r\n            state.balances.map(\r\n                balance =>\r\n                    <option>{balance.coinId}</option>\r\n            )\r\n            \r\n        }\r\n       </select>\r\n       \r\n    </div>)\r\n        \r\n       \r\n    \r\n    }\r\n    else{\r\n        return null;\r\n    }\r\n    \r\n   \r\n}\r\nexport default PayMethod;"]},"metadata":{},"sourceType":"module"}