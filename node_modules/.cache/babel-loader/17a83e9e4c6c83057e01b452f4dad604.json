{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 7420\\\\Documents\\\\GitHub\\\\deloy-heroku\\\\src\\\\components\\\\TransCoin.js\";\nimport React from \"react\";\nimport Util from \"./Util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TransCoin extends React.Component {\n  // Constructor\n  constructor(props) {\n    super(props);\n\n    this.TransCoin = coinId => {\n      fetch(Util.URL_REST + \"api/coin/getMaketCap/\" + coinId).then(res => res.json()).then(json => {\n        console.log(json);\n        this.componentDidMount();\n      });\n    };\n\n    this.setPram = event => {\n      this.setState({\n        [event.target.name]: event.target.value.trim()\n      });\n    };\n\n    this.trans = () => {\n      var coin1 = this.state.coin1;\n      var coin2 = this.state.coin2;\n      var qty = this.state.qty;\n\n      if (qty === null || qty === '') {\n        qty = 1;\n      }\n\n      fetch(Util.URL_REST + \"api/coin/transCoin/\" + coin1 + \"/\" + coin2 + \"/\" + qty, {\n        method: \"GET\",\n        headers: Util.headersList\n      }).then(res => res.json()).then(json => {\n        Util.swal({\n          text: +qty + ' ' + coin1 + ' = ' + Util.setComma(json) + ' ' + coin2,\n          icon: \"success\"\n        });\n      });\n    };\n\n    this.state = {\n      coin1: 'BTC',\n      coin2: 'BTC',\n      qty: 1,\n      coins: []\n    };\n  }\n\n  componentDidMount() {\n    var a = -1;\n    fetch(Util.URL_REST + \"api/coin/getAllCoin/\" + a).then(res => res.json()).then(json => {\n      console.log(json);\n      this.setState({\n        coins: json\n      });\n    });\n  }\n\n  render() {\n    const {\n      coins\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: this.setPram,\n        name: \"coin1\",\n        style: {\n          marginRight: '10px',\n          width: '30%',\n          float: 'left'\n        },\n        class: \"form-control\",\n        children: coins.map(coin => /*#__PURE__*/_jsxDEV(\"option\", {\n          onChange: this.setPram,\n          value: coin.coinId,\n          children: coin.coinName\n        }, coin.coinId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"qty\",\n        onChange: this.setPram,\n        style: {\n          marginLeft: '105px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.trans,\n        children: \"trans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        class: \"form-control\",\n        name: \"coin2\",\n        onChange: this.setPram,\n        style: {\n          width: '30%',\n          float: 'right'\n        },\n        children: coins.map(coin => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: coin.coinId,\n          children: coin.coinName\n        }, coin.coinId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TransCoin;","map":{"version":3,"sources":["C:/Users/Dell 7420/Documents/GitHub/deloy-heroku/src/components/TransCoin.js"],"names":["React","Util","TransCoin","Component","constructor","props","coinId","fetch","URL_REST","then","res","json","console","log","componentDidMount","setPram","event","setState","target","name","value","trim","trans","coin1","state","coin2","qty","method","headers","headersList","swal","text","setComma","icon","coins","a","render","marginRight","width","float","map","coin","coinName","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Util from \"./Util\";\r\n\r\nclass TransCoin extends React.Component {\r\n\r\n    // Constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coin1:'BTC',\r\n            coin2:'BTC',\r\n            qty:1,\r\n            coins:[]\r\n        };\r\n    }\r\n    TransCoin = (coinId) => {\r\n        fetch(Util.URL_REST + \"api/coin/getMaketCap/\" + coinId).then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json);\r\n                this.componentDidMount();\r\n            })\r\n    }\r\n    setPram = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value.trim() });\r\n    }\r\n    trans = ()=>{\r\n        var coin1 = this.state.coin1;\r\n        var coin2 = this.state.coin2;\r\n        var qty = this.state.qty;\r\n        if(qty===null||qty===''){\r\n            qty = 1\r\n        }\r\n        fetch(Util.URL_REST + \"api/coin/transCoin/\"+coin1+\"/\"+coin2+\"/\"+qty, {\r\n            method: \"GET\",\r\n            headers: Util.headersList\r\n        }).then((res) => res.json())\r\n            .then((json) => {\r\n                Util.swal({\r\n                    text:  + qty + ' '+coin1+ ' = '+Util.setComma(json) +' '+ coin2,\r\n                    icon: \"success\",\r\n                  });\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        var a = -1\r\n        fetch(Util.URL_REST + \"api/coin/getAllCoin/\" + a)\r\n        .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json);\r\n                this.setState({\r\n                    coins: json,\r\n                });\r\n            })\r\n    }\r\n    render() {\r\n        const {coins } = this.state;\r\n            return (\r\n            <div className=\"container\">\r\n                <select onChange={this.setPram} \r\n                name = 'coin1' style={{marginRight:'10px' , width:'30%',float:'left'}} class=\"form-control\">\r\n                {\r\n                            coins.map(\r\n                                    coin =>\r\n                                     <option key={coin.coinId} onChange={this.setPram}  value = {coin.coinId}>{coin.coinName}</option>\r\n                                        \r\n                                )\r\n                }\r\n                </select>\r\n               <input type = \"number\" name = 'qty' \r\n               onChange={this.setPram} style={{marginLeft:'105px'}}></input>\r\n               <button onClick={this.trans}>trans</button>\r\n                <select class=\"form-control\" name = 'coin2'  onChange={this.setPram} \r\n                style={{width:'30%' , float:'right'}}>\r\n                {\r\n                            coins.map(\r\n                                    coin =>\r\n                                     <option key={coin.coinId}  value = {coin.coinId}>{coin.coinName}</option>\r\n                                        \r\n                                )\r\n                }\r\n                </select>\r\n            </div>\r\n            );\r\n    }\r\n}\r\nexport default TransCoin;"]},"metadata":{},"sourceType":"module"}