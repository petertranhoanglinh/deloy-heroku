{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 7420\\\\Documents\\\\GitHub\\\\deloy-heroku\\\\src\\\\components\\\\Coin.js\";\nimport React from \"react\";\nimport Util from \"./Util\";\nimport Pagination from \"react-js-pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Coin extends React.Component {\n  // Constructor\n  constructor(props) {\n    super(props);\n\n    this.UpdatePrice = coinId => {\n      fetch(Util.URL_REST + \"api/coin/getMaketCap/\" + coinId).then(res => res.json()).then(json => {\n        this.componentDidMount();\n      });\n    };\n\n    this.searchCoin = () => {\n      var coinId = this.state.searchCoin;\n      fetch(Util.URL_REST + \"api/coin/getMaketCap/\" + coinId).then(res => res.json()).then(json => {\n        var arr = new Array(json);\n\n        if (json.statusCode === 2) {\n          alert(json.message);\n          return false;\n        }\n\n        this.componentDidMount(arr);\n      });\n    };\n\n    this.setPram = event => {\n      this.setState({\n        [event.target.name]: event.target.value.trim()\n      });\n    };\n\n    this.state = {\n      coins: [],\n      DataisLoaded: false,\n      searchCoin: ''\n    };\n  }\n\n  handlePageChange(pageNumber) {\n    this.setState({\n      activePage: pageNumber\n    });\n    fetch(Util.URL_REST + \"api/coin/getAllCoin/\" + pageNumber, {\n      method: \"GET\",\n      headers: Util.headersList\n    }).then(res => res.json()).then(json => {\n      console.log(json);\n      this.setState({\n        coins: json,\n        DataisLoaded: true\n      });\n    });\n  }\n\n  componentDidMount(item) {\n    if (item == null) {\n      fetch(Util.URL_REST + \"api/coin/getAllCoin/\" + 1, {\n        method: \"GET\",\n        headers: Util.headersList\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          coins: json,\n          DataisLoaded: true\n        });\n      });\n    } else {\n      this.setState({\n        coins: item,\n        DataisLoaded: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      coins\n    } = this.state;\n    if (!DataisLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-title-cl\",\n        children: \" Plesea login.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 35\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"searchCoin\",\n        onChange: this.setPram,\n        placeholder: \"Search coinId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.searchCoin,\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover\",\n        style: {\n          height: \"720px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"CoinId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"CoinName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"Update-time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: coins.map(coin => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              onClick: () => this.UpdatePrice(coin.coinId),\n              children: coin.coinId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              onClick: () => this.UpdatePrice(coin.coinId),\n              children: coin.coinName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              onClick: () => this.UpdatePrice(coin.coinId),\n              children: Util.setComma(coin.price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              onClick: () => this.UpdatePrice(coin.coinId),\n              children: coin.timeUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 45\n            }, this)]\n          }, coin.coinId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        activePage: this.state.activePage,\n        itemsCountPerPage: 10,\n        totalItemsCount: 4500,\n        onChange: this.handlePageChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Coin;","map":{"version":3,"sources":["C:/Users/Dell 7420/Documents/GitHub/deloy-heroku/src/components/Coin.js"],"names":["React","Util","Pagination","Coin","Component","constructor","props","UpdatePrice","coinId","fetch","URL_REST","then","res","json","componentDidMount","searchCoin","state","arr","Array","statusCode","alert","message","setPram","event","setState","target","name","value","trim","coins","DataisLoaded","handlePageChange","pageNumber","activePage","method","headers","headersList","console","log","item","render","height","map","coin","coinName","setComma","price","timeUpdate","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Util from \"./Util\";\r\nimport Pagination from \"react-js-pagination\";\r\nclass Coin extends React.Component {\r\n\r\n    // Constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coins: [],\r\n            DataisLoaded: false,\r\n            searchCoin: '',\r\n        };\r\n    }\r\n\r\n    UpdatePrice = (coinId) => {\r\n        fetch(Util.URL_REST + \"api/coin/getMaketCap/\" + coinId).then((res) => res.json())\r\n            .then((json) => {\r\n                this.componentDidMount();\r\n            })\r\n\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        this.setState({ activePage: pageNumber });\r\n\r\n        fetch(Util.URL_REST + \"api/coin/getAllCoin/\" + pageNumber, {\r\n            method: \"GET\",\r\n            headers: Util.headersList\r\n        }).then((res) => res.json())\r\n            .then((json) => {\r\n               console.log(json);\r\n                this.setState({\r\n                    coins: json,\r\n                    DataisLoaded: true\r\n                });\r\n                \r\n            })\r\n        \r\n\r\n    }\r\n\r\n    searchCoin = () => {\r\n\r\n        var coinId = this.state.searchCoin;\r\n        fetch(Util.URL_REST + \"api/coin/getMaketCap/\" + coinId)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                var arr = new Array(json);\r\n                if (json.statusCode === 2) {\r\n                    alert(json.message)\r\n                    return false;\r\n                }\r\n                this.componentDidMount(arr);\r\n            })\r\n\r\n    }\r\n    setPram = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value.trim() });\r\n    }\r\n    componentDidMount(item) {\r\n        if (item == null) {\r\n            fetch(Util.URL_REST + \"api/coin/getAllCoin/\" + 1, {\r\n                method: \"GET\",\r\n                headers: Util.headersList\r\n            }).then((res) => res.json())\r\n                .then((json) => {\r\n                    this.setState({\r\n                        coins: json,\r\n                        DataisLoaded: true\r\n                    });\r\n                })\r\n        } else {\r\n            this.setState({\r\n                coins: item,\r\n                DataisLoaded: true\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { DataisLoaded, coins } = this.state;\r\n        if (!DataisLoaded) return <div>\r\n            <h6 className=\"text-title-cl\"> Plesea login.... </h6> </div>;\r\n        else\r\n            return (\r\n                <div>\r\n\r\n\r\n                    <input type='text' name='searchCoin' onChange={this.setPram} placeholder='Search coinId' />\r\n                    <button onClick={this.searchCoin}>search</button>\r\n\r\n                    <table className=\"table table-hover\" style={{height:\"720px\"}}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-th-cl\">CoinId</th>\r\n                                <th className=\"text-th-cl\">CoinName</th>\r\n                                <th className=\"text-th-cl\">Price</th>\r\n                                <th className=\"text-th-cl\">Update-time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                coins.map(\r\n                                    coin =>\r\n                                        <tr key={coin.coinId}>\r\n                                            <td className=\"text-td-cl\" onClick={() => this.UpdatePrice(coin.coinId)}>{coin.coinId}</td>\r\n                                            <td className=\"text-td-cl\" onClick={() => this.UpdatePrice(coin.coinId)}>{coin.coinName}</td>\r\n                                            <td className=\"text-td-cl\" onClick={() => this.UpdatePrice(coin.coinId)}>{Util.setComma(coin.price)}</td>\r\n                                            <td className=\"text-td-cl\" onClick={() => this.UpdatePrice(coin.coinId)}>{coin.timeUpdate}</td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={4500}\r\n                        onChange={this.handlePageChange.bind(this)}\r\n                    />\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Coin;"]},"metadata":{},"sourceType":"module"}