{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tunat\\\\Downloads\\\\tienao\\\\tienao\\\\my-app\\\\my-app\\\\src\\\\components\\\\Balance.js\";\nimport React from \"react\";\nimport Url from \"./Url\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem('token');\nconst AuthStr = 'Bearer ' + token;\n\nclass Balance extends React.Component {\n  // Constructor\n  constructor(props) {\n    super(props);\n\n    this.handleClick = event => {\n      // alert(quantityCoin)\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.withdraw = (quantityCoin, coinId) => {\n      if (this.state.quantitySend > quantityCoin) {\n        alert('The amount of coins sent cannot be greater than the amount available');\n        return false;\n      }\n\n      var myHeaders = new Headers();\n      myHeaders.append(\"Accept-Language\", \"application/json\");\n      myHeaders.append(\"Authorization\", AuthStr);\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var raw = JSON.stringify({\n        \"contract\": this.state.contract,\n        \"coinId\": coinId,\n        \"quantity\": this.state.quantitySend\n      });\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n      fetch(Url.URL_REST + \"api/account/withdraw\", requestOptions).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(result => {\n        if (result.returnMessage === 'fail') {\n          alert('address does not exist');\n        } else {\n          alert(result.returnMessage);\n          this.componentDidMount();\n        }\n      }).catch(error => console.log('error', error));\n    };\n\n    this.setPram = event => {\n      this.setState({\n        [event.target.name]: event.target.value.trim()\n      });\n    };\n\n    this.addCoin = () => {\n      var coinId = this.state.addCoin;\n      var myHeaders = new Headers();\n      myHeaders.append(\"Accept-Language\", \"application/json\");\n      myHeaders.append(\"Authorization\", AuthStr);\n      myHeaders.append(\"Cookie\", \"Cookie_1=value\");\n      var raw = \"\";\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n      fetch(Url.URL_REST + \"api/account/add/\" + coinId, requestOptions).then(response => response.json()).then(result => {\n        console.log(result);\n\n        if (result.statusCode === 1030) {\n          alert(result.message);\n          return false;\n        } else {\n          alert('suscess');\n        }\n\n        this.componentDidMount();\n      }).catch(error => {\n        console.log('error', error);\n      });\n    };\n\n    this.state = {\n      balances: [],\n      DataisLoaded: false,\n      'quantitySend': 0,\n      'contract': '',\n      addCoin: ''\n    };\n  }\n\n  // ComponentDidMount is used to\n  // execute the code\n  componentDidMount() {\n    let headersList = {\n      \"User-Agent\": \"Thunder Client (https://www.thunderclient.com)\",\n      \"Accept-Language\": \"application/json\",\n      \"Authorization\": AuthStr\n    };\n    fetch(Url.URL_REST + \"api/account/balance\", {\n      method: \"GET\",\n      headers: headersList\n    }).then(res => res.json()).then(json => {\n      console.log(json);\n      this.setState({\n        balances: json,\n        DataisLoaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      balances\n    } = this.state;\n    if (!DataisLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-title-cl\",\n        children: \" Plesea login... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 35\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"addCoin\",\n        onChange: this.setPram,\n        placeholder: \"add Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addCoin,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"AccountId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"CoinId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"Contract\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"Amount of coins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"Time Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"Total amount (USD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"Amount of coin sent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-th-cl\",\n              children: \"Contract to send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: balances.map(coin => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              children: coin.accountId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              children: coin.coinId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              children: coin.contract\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              children: coin.quantityReal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              children: coin.timeUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              children: coin.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              children: coin.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"quantitySend\",\n                class: \"form-control\",\n                onChange: this.handleClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"contract\",\n                class: \"form-control\",\n                onChange: this.handleClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-td-cl\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"btn btn-primary\",\n                onClick: () => this.withdraw(coin.quantityReal, coin.coinId),\n                children: \"Withdraw\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 45\n            }, this)]\n          }, coin.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Balance;","map":{"version":3,"sources":["C:/Users/tunat/Downloads/tienao/tienao/my-app/my-app/src/components/Balance.js"],"names":["React","Url","token","localStorage","getItem","AuthStr","Balance","Component","constructor","props","handleClick","event","setState","target","name","value","withdraw","quantityCoin","coinId","state","quantitySend","alert","myHeaders","Headers","append","raw","JSON","stringify","contract","requestOptions","method","headers","body","redirect","fetch","URL_REST","then","response","ok","json","result","returnMessage","componentDidMount","catch","error","console","log","setPram","trim","addCoin","statusCode","message","balances","DataisLoaded","headersList","res","render","map","coin","accountId","quantityReal","timeUpdate","price","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Url from \"./Url\";\r\nconst token = localStorage.getItem('token');\r\nconst AuthStr = 'Bearer ' + token;\r\n\r\nclass Balance extends React.Component {\r\n    // Constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            balances: [],\r\n            DataisLoaded: false,\r\n            'quantitySend': 0,\r\n            'contract': '',\r\n            addCoin: ''\r\n        };\r\n    }\r\n    handleClick = (event) => {\r\n        // alert(quantityCoin)\r\n        this.setState({ [event.target.name]: event.target.value })\r\n\r\n    }\r\n\r\n    withdraw = (quantityCoin, coinId) => {\r\n        if (this.state.quantitySend > quantityCoin) {\r\n            alert('The amount of coins sent cannot be greater than the amount available')\r\n            return false;\r\n        }\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Accept-Language\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", AuthStr);\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            \"contract\": this.state.contract,\r\n            \"coinId\": coinId,\r\n            \"quantity\": this.state.quantitySend\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(Url.URL_REST + \"api/account/withdraw\", requestOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then(result => {\r\n                if (result.returnMessage === 'fail') {\r\n                    alert('address does not exist');\r\n                } else {\r\n                    alert(result.returnMessage);\r\n                    this.componentDidMount();\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n    }\r\n    // ComponentDidMount is used to\r\n    // execute the code\r\n    componentDidMount() {\r\n        let headersList = {\r\n            \"User-Agent\": \"Thunder Client (https://www.thunderclient.com)\",\r\n            \"Accept-Language\": \"application/json\",\r\n            \"Authorization\": AuthStr\r\n        }\r\n        fetch(Url.URL_REST + \"api/account/balance\", {\r\n            method: \"GET\",\r\n            headers: headersList\r\n        }).then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json);\r\n                this.setState({\r\n                    balances: json,\r\n                    DataisLoaded: true\r\n                });\r\n            })\r\n    }\r\n    setPram = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value.trim() });\r\n    }\r\n\r\n    addCoin = () => {\r\n\r\n        var coinId = this.state.addCoin;\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Accept-Language\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", AuthStr);\r\n        myHeaders.append(\"Cookie\", \"Cookie_1=value\");\r\n\r\n        var raw = \"\";\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(Url.URL_REST + \"api/account/add/\" + coinId, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                if (result.statusCode === 1030) {\r\n                    alert(result.message)\r\n                    return false;\r\n                } else {\r\n                    alert('suscess');\r\n                }\r\n                this.componentDidMount();\r\n            })\r\n            .catch(error => {\r\n                console.log('error', error)\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { DataisLoaded, balances } = this.state;\r\n        if (!DataisLoaded) return <div>\r\n            <h6 className=\"text-title-cl\"> Plesea login... </h6> </div>;\r\n        else\r\n            return (\r\n                <div>\r\n                    <input type='text' name='addCoin' onChange={this.setPram} placeholder='add Balance' />\r\n                    <button onClick={this.addCoin}>Add</button>\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-th-cl\">AccountId</th>\r\n                                <th className=\"text-th-cl\">CoinId</th>\r\n                                <th className=\"text-th-cl\">Contract</th>\r\n                                <th className=\"text-th-cl\">Amount of coins</th>\r\n                                <th className=\"text-th-cl\">Time Update</th>\r\n                                <th className=\"text-th-cl\">Cost</th>\r\n                                <th className=\"text-th-cl\">Total amount (USD)</th>\r\n                                <th className=\"text-th-cl\">Amount of coin sent</th>\r\n                                <th className=\"text-th-cl\">Contract to send</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                balances.map(\r\n                                    coin =>\r\n                                        <tr key={coin.id}>\r\n                                            <td className=\"text-td-cl\">{coin.accountId}</td>\r\n                                            <td className=\"text-td-cl\">{coin.coinId}</td>\r\n                                            <td className=\"text-td-cl\">{coin.contract}</td>\r\n                                            <td className=\"text-td-cl\">{coin.quantityReal}</td>\r\n                                            <td className=\"text-td-cl\">{coin.timeUpdate}</td>\r\n                                            <td className=\"text-td-cl\">{coin.price}</td>\r\n                                            <td className=\"text-td-cl\">{coin.value}</td>\r\n                                            <td className=\"text-td-cl\">\r\n                                                <input type=\"number\" name=\"quantitySend\" class=\"form-control\" onChange={this.handleClick} />\r\n                                            </td>\r\n                                            <td className=\"text-td-cl\">\r\n                                                <input type=\"text\" name=\"contract\" class=\"form-control\" onChange={this.handleClick} />\r\n                                            </td>\r\n                                            <td className=\"text-td-cl\">\r\n                                                <button type=\"button\" class=\"btn btn-primary\" onClick={() => this.withdraw(coin.quantityReal, coin.coinId)}>Withdraw</button></td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Balance;"]},"metadata":{},"sourceType":"module"}